/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package algorithm.p2346;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.StringTokenizer;

public class Main {


    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        Deque<Item> deque = new ArrayDeque<>();
        StringTokenizer st = new StringTokenizer(br.readLine(), " ");
        for (int i = 1; i <= n; i++) {
            int temp = Integer.parseInt(st.nextToken());
            deque.add(new Item(i, temp));
        }
        while (!deque.isEmpty()) {
            Item item = deque.pollFirst();
            System.out.print(item.getIndex());
            System.out.print(" ");
            int data = item.getData();
            while (data > 1) {
                if (deque.isEmpty()) {
                    break;
                }
                Item temp = deque.pollFirst();
                deque.addLast(temp);
                data--;
            }
            while (data < 0) {
                if (deque.isEmpty()) {
                    break;
                }
                Item temp = deque.pollLast();
                deque.addFirst(temp);
                data++;
            }
        }
    }
}

class Item {

    private final int index;
    private final int data;

    public Item(int index, int data) {
        this.index = index;
        this.data = data;
    }

    public int getData() {
        return data;
    }

    public int getIndex() {
        return index;
    }
}